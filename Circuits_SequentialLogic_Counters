//1.4 bit binary counter
//Code:
module top_module (input clk,input reset,output [3:0] q);
	always @ (posedge clk) begin
        if (reset) q <= 4'd0;
        else q <= q+4'd1;
    end
endmodule


//2.Count10(0-9)
//Code:
module top_module (input clk,input reset,output [3:0] q);
    always @(posedge clk) begin
        if(reset) q <= 0;
        else
            if(q == 9) q <= 0;
            else q <= q + 1;
    end 
endmodule


//3.Count10(1-10)
//Code:
module top_module (input clk,input reset,output [3:0] q);
    always @(posedge clk)begin
        if(reset) q<=1;
        else if (q == 10) q<=1;
        else q<=q+1;
    end
endmodule


//4.Slow decade counter
//Code:
module top_module (input clk,input slowena,input reset,output [3:0] q);
    always @(posedge clk)begin
        if (reset) q<=0;
          else begin
            if(slowena) begin
                if (q==9) begin
                    q<=0;
                end
                else begin
                    q <= q+1;
                end
            end
          end
    end
endmodule


//5.Counter 1-12
//Code:



//6.Counter 1000
//Code:


//7.4 digit decimal counter
//Code:


//8.12-hour clock
//Code:

